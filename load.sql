/*The following is the sql query to create separate tables for categorical values
and applying constraints to the foreign key*/

--Creating a table to store the HEAT_TYPE of a property
CREATE TABLE HEAT_TYPE (
	HEAT_TYPE NUMERIC(2) PRIMARY KEY,
	HEAT_TYPE_DESCRIPTION CHARACTER VARYING(20) NOT NULL);
--Inserting data into HEAT_TYPE from the main table
INSERT INTO HEAT_TYPE (HEAT_TYPE,HEAT_TYPE_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(HEAT_TYPE,0) AS NUMERIC(2)) AS HEAT_TYPE,COALESCE(HEAT_TYPE_DESCRIPTION,'UNKNOWN')
FROM MAIN 
--WHERE HEAT_TYPE IS NOT NULL
ORDER BY HEAT_TYPE;
--Creating a column in main table to store the primary key of HEAT_TYPE as foreign key and making it to NULL on delete from HEAT_TYPE
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_HEAT_TYPE FOREIGN KEY (HEAT_TYPE) REFERENCES HEAT_TYPE (HEAT_TYPE) ON DELETE SET NULL;
UPDATE MAIN AS M
SET HEAT_TYPE = S.HEAT_TYPE
FROM HEAT_TYPE AS S
WHERE COALESCE(M.HEAT_TYPE_DESCRIPTION,'UNKNOWN') = S.HEAT_TYPE_DESCRIPTION;
--Dropping HEAT_TYPE and HEAT_TYPE_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN HEAT_TYPE_DESCRIPTION;

--Creating a table to store the BUILDING_STYLE_TYPE of a property
CREATE TABLE BUILDING_STYLE (
	BUILDING_STYLE_CODE NUMERIC(2) PRIMARY KEY,
	BUILDING_STYLE_DESCRIPTION CHARACTER VARYING(200));
--Inserting data into BUILDING_STYLE from the main table
INSERT INTO BUILDING_STYLE (BUILDING_STYLE_CODE,BUILDING_STYLE_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(BUILDING_STYLE_CODE,0) AS NUMERIC(2)) AS BUILDING_STYLE_CODE,COALESCE(BUILDING_STYLE_DESCRIPTION,'UNKNOWN') 
FROM MAIN
--WHERE BUILDING_STYLE_CODE IS NOT NULL
ORDER BY BUILDING_STYLE_CODE;
--Creating a column in main table to store the primary key of BUILDING_STYLE as foreign key and making it to NULL on delete from BUILDING_STYLE
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_BUILDING_STYLE FOREIGN KEY (BUILDING_STYLE_CODE) REFERENCES BUILDING_STYLE (BUILDING_STYLE_CODE) ON DELETE SET NULL;
UPDATE MAIN AS M
SET BUILDING_STYLE_CODE = S.BUILDING_STYLE_CODE
FROM BUILDING_STYLE AS S
WHERE COALESCE(M.BUILDING_STYLE_CODE,0) = S.BUILDING_STYLE_CODE;
--Dropping BUILDING_STYLE_CODE and BUILDING_STYLE_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN BUILDING_STYLE_DESCRIPTION;

--Creating a table to store the CONSTRUCTION_QUALITY of a property
CREATE TABLE CONSTRUCTION_QUALITY (
	CONSTRUCTION_QUALITY_CODE NUMERIC(16,8) PRIMARY KEY,
	CONSTRUCTION_QUALITY_DESCRIPTION CHARACTER VARYING(200));
--Inserting data into CONSTRUCTION_QUALITY from the main table
INSERT INTO CONSTRUCTION_QUALITY (CONSTRUCTION_QUALITY_CODE,CONSTRUCTION_QUALITY_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(CONSTRUCTION_QUALITY_CODE,0) AS NUMERIC(16,8)) AS CONSTRUCTION_QUALITY_CODE,COALESCE(CONSTRUCTION_QUALITY_DESCRIPTION,'UNKNOWN') 
FROM MAIN 
--WHERE CONSTRUCTION_QUALITY_CODE IS NOT NULL
ORDER BY CONSTRUCTION_QUALITY_CODE;
--Creating a column in main table to store the primary key of CONSTRUCTION_QUALITY as foreign key and making it to NULL on delete from CONSTRUCTION_QUALITY
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_CONSTRUCTION_QUALITY FOREIGN KEY (CONSTRUCTION_QUALITY_CODE) REFERENCES CONSTRUCTION_QUALITY (CONSTRUCTION_QUALITY_CODE) ON DELETE SET NULL;
UPDATE MAIN AS M
SET CONSTRUCTION_QUALITY_CODE = S.CONSTRUCTION_QUALITY_CODE
FROM CONSTRUCTION_QUALITY AS S
WHERE COALESCE(M.CONSTRUCTION_QUALITY_CODE,0) = S.CONSTRUCTION_QUALITY_CODE;
--Dropping CONSTRUCTION_QUALITY_CODE and CONSTRUCTION_QUALITY_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN CONSTRUCTION_QUALITY_DESCRIPTION;

--Creating a table to store the CONSTRUCTION_GRADE of a property
CREATE TABLE CONSTRUCTION_GRADE (
	CONSTRUCTION_GRADE CHARACTER VARYING(200) PRIMARY KEY,
	CONSTRUCTION_GRADE_DESCRIPTION CHARACTER VARYING(200));
--Inserting data into CONSTRUCTION_GRADE from the main table
INSERT INTO CONSTRUCTION_GRADE (CONSTRUCTION_GRADE,CONSTRUCTION_GRADE_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(CONSTRUCTION_GRADE,'UNKNOWN') AS CHARACTER VARYING(200)) AS CONSTRUCTION_GRADE,
COALESCE(CONSTRUCTION_GRADE_DESCRIPTION,'UNKNOWN') 
FROM MAIN 
--WHERE CONSTRUCTION_GRADE IS NOT NULL
ORDER BY CONSTRUCTION_GRADE;
--Creating a column in main table to store the primary key of CONSTRUCTION_GRADE as foreign key and making it to NULL on delete from CONSTRUCTION_GRADE
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_CONSTRUCTION_GRADE FOREIGN KEY (CONSTRUCTION_GRADE) REFERENCES CONSTRUCTION_GRADE (CONSTRUCTION_GRADE) ON DELETE SET NULL;
UPDATE MAIN AS M
SET CONSTRUCTION_GRADE = S.CONSTRUCTION_GRADE
FROM CONSTRUCTION_GRADE AS S
WHERE COALESCE(M.CONSTRUCTION_GRADE,'UNKNOWN') = S.CONSTRUCTION_GRADE;
--Dropping CONSTRUCTION_GRADE and CONSTRUCTION_GRADE_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN CONSTRUCTION_GRADE_DESCRIPTION;

--Creating a table to store the EXTERIOR_WALL of a property
CREATE TABLE EXTERIOR_WALL (
	EXTERIOR_WALL_CODE NUMERIC(2) PRIMARY KEY,
	EXTERIOR_WALL_DESCRIPTION CHARACTER VARYING(200));
--Inserting data into EXTERIOR_WALL from the main table
INSERT INTO EXTERIOR_WALL (EXTERIOR_WALL_CODE,EXTERIOR_WALL_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(EXTERIOR_WALL_CODE,0) AS NUMERIC(2)) AS EXTERIOR_WALL_CODE,
COALESCE(EXTERIOR_WALL_DESCRIPTION,'UNKNOWN') 
FROM MAIN 
--WHERE EXTERIOR_WALL_CODE IS NOT NULL
ORDER BY EXTERIOR_WALL_CODE;
--Creating a column in main table to store the primary key of EXTERIOR_WALL as foreign key and making it to NULL on delete from EXTERIOR_WALL
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_EXTERIOR_WALL FOREIGN KEY (EXTERIOR_WALL_CODE) REFERENCES EXTERIOR_WALL (EXTERIOR_WALL_CODE) ON DELETE SET NULL;
UPDATE MAIN AS M
SET EXTERIOR_WALL_CODE = S.EXTERIOR_WALL_CODE
FROM EXTERIOR_WALL AS S
WHERE COALESCE(M.EXTERIOR_WALL_CODE,0) = S.EXTERIOR_WALL_CODE;
--Dropping EXTERIOR_WALL_CODE and EXTERIOR_WALL_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN EXTERIOR_WALL_DESCRIPTION;


--Creating a table to store the OVERALL_CONDITION of a property
CREATE TABLE OVERALL_CONDITION (
	OVERALL_CONDITION NUMERIC(2) PRIMARY KEY,
	OVERALL_CONDITION_DESCRIPTION CHARACTER VARYING(200));
--Inserting data into OVERALL_CONDITION from the main table
INSERT INTO OVERALL_CONDITION (OVERALL_CONDITION,OVERALL_CONDITION_DESCRIPTION)
SELECT DISTINCT CAST(COALESCE(OVERALL_CONDITION,0) AS NUMERIC(2)) AS OVERALL_CONDITION,
COALESCE(OVERALL_CONDITION_DESCRIPTION,'UNKNOWN') 
FROM MAIN 
--WHERE OVERALL_CONDITION IS NOT NULL
ORDER BY OVERALL_CONDITION;
--Creating a column in main table to store the primary key of OVERALL_CONDITION as foreign key and making it to NULL on delete from OVERALL_CONDITION
ALTER TABLE MAIN 
	ADD CONSTRAINT FK_MAIN_OVERALL_CONDITION FOREIGN KEY (OVERALL_CONDITION) REFERENCES OVERALL_CONDITION (OVERALL_CONDITION) ON DELETE SET NULL;
UPDATE MAIN AS M
SET OVERALL_CONDITION = S.OVERALL_CONDITION
FROM OVERALL_CONDITION AS S
WHERE COALESCE(M.OVERALL_CONDITION,0) = S.OVERALL_CONDITION;
--Dropping OVERALL_CONDITION and OVERALL_CONDITION_DESCRIPTION from main table
ALTER TABLE MAIN 
	DROP COLUMN OVERALL_CONDITION_DESCRIPTION;
	
--Creating a table to store the HOUSE_LOCATION of a property
CREATE TABLE HOUSE_LOCATION (
	SBL CHARACTER VARYING(200) NOT NULL,
	HOUSE_NUMBER NUMERIC(16) NOT NULL,
	STREET CHARACTER VARYING(200) NOT NULL,
	ZIPCODE NUMERIC(16),
	ZIPCODE_EXTENSION NUMERIC(16),
	LATITUDE CHARACTER VARYING(200),
	LONGITUDE CHARACTER VARYING(200),
	TAX_DISTRICT NUMERIC(16),
	COUNCIL_DISTRICT CHARACTER VARYING(200),
	COUNCIL_DISTRICT_1 CHARACTER VARYING(200),
	POLICE_DISTRICT CHARACTER VARYING(200),
	NEIGHBORHOOD CHARACTER VARYING(200),
	CONSTRAINT FK_HOUSE_LOCATION_MAIN FOREIGN KEY(SBL) REFERENCES MAIN(SBL) ON DELETE CASCADE);
--Inserting data into HOUSE_LOCATION from the main table
INSERT INTO HOUSE_LOCATION
SELECT SBL,HOUSE_NUMBER,STREET,ZIPCODE,ZIPCODE_EXTENSION,LATITUDE,LONGITUDE,
TAX_DISTRICT,COUNCIL_DISTRICT,COUNCIL_DISTRICT_1,POLICE_DISTRICT,NEIGHBORHOOD 
FROM MAIN ;
--Dropping HOUSE_NUMBER,STREET,ZIPCODE,ZIPCODE_EXTENSION,LATITUDE,LONGITUDE from main table
ALTER TABLE MAIN 
	DROP COLUMN HOUSE_NUMBER,
	DROP COLUMN STREET,
	DROP COLUMN ZIPCODE,
	DROP COLUMN ZIPCODE_EXTENSION,
	DROP COLUMN LATITUDE,
	DROP COLUMN LONGITUDE,
	DROP COLUMN TAX_DISTRICT,
	DROP COLUMN COUNCIL_DISTRICT,
	DROP COLUMN COUNCIL_DISTRICT_1,
	DROP COLUMN POLICE_DISTRICT,
	DROP COLUMN NEIGHBORHOOD;
	
--Creating a column in main table to store the OWNER_MAIL. It is a combination of the following MAIL1,MAIL2,MAIL3,MAIL4,MAIL_COUNTRY,MAIL_ZIPCODE,MAIL_ZIPCODE_EXTENSION
ALTER TABLE MAIN 
	ADD OWNER_MAIL CHARACTER VARYING(200);
UPDATE MAIN
SET OWNER_MAIL = CONCAT_WS(', ',MAIL1,MAIL2,MAIL3,MAIL4,MAIL_COUNTRY,MAIL_ZIPCODE,MAIL_ZIPCODE_EXTENSION) ;
--Dropping MAIL1,MAIL2,MAIL3,MAIL4,MAIL_COUNTRY,MAIL_ZIPCODE,MAIL_ZIPCODE_EXTENSION from main table
ALTER TABLE MAIN 
	DROP COLUMN MAIL1,
	DROP COLUMN MAIL2,
	DROP COLUMN MAIL3,
	DROP COLUMN MAIL4,
	DROP COLUMN MAIL_COUNTRY,
	DROP COLUMN MAIL_ZIPCODE,
	DROP COLUMN MAIL_ZIPCODE_EXTENSION;

--Creating a table to store the DEED of a property
CREATE TABLE DEED (
	SBL CHARACTER VARYING(200) NOT NULL,
	DEED_BOOK NUMERIC(16),
	DEED_PAGE NUMERIC(16),
	DEED_DATE CHARACTER VARYING(200),
	DEED_TYPE_CODE CHARACTER VARYING(200) NOT NULL,
	CONSTRAINT FK_DEED_MAIN FOREIGN KEY(SBL) REFERENCES MAIN(SBL) ON DELETE CASCADE);
--Inserting data into DEED from the main table
INSERT INTO DEED
SELECT SBL,DEED_BOOK,DEED_PAGE,DEED_DATE,COALESCE(DEED_TYPE_CODE,'UNKNOWN') AS DEED_TYPE_CODE
FROM MAIN 
ORDER BY DEED_BOOK,DEED_PAGE,DEED_DATE,COALESCE(DEED_TYPE_CODE,'UNKNOWN');
--Dropping DEED_BOOK,DEED_PAGE,DEED_DATE from main table
ALTER TABLE MAIN 
	DROP COLUMN DEED_BOOK,
	DROP COLUMN DEED_PAGE,
	DROP COLUMN DEED_DATE,
	DROP COLUMN DEED_TYPE_CODE;

--Creating a table to store the OWNER_DETAILS of a property
CREATE TABLE OWNER_DETAILS (
	SBL CHARACTER VARYING(200) NOT NULL,
	OWNER1 CHARACTER VARYING(200),
	OWNER2 CHARACTER VARYING(200),
	PREVIOUS_OWNER CHARACTER VARYING(200),
	OWNER_MAIL CHARACTER VARYING(200),
	CONSTRAINT FK_OWNER_DETAILS_MAIN FOREIGN KEY(SBL) REFERENCES MAIN(SBL) ON DELETE CASCADE);
--Inserting data into OWNER_DETAILS from the main table
INSERT INTO OWNER_DETAILS
SELECT SBL,OWNER1,OWNER2,PREVIOUS_NUMBER,OWNER_MAIL 
FROM MAIN 
ORDER BY SBL;
--Dropping OWNER1,OWNER2,PREVIOUS_NUMBER,OWNER_MAIL from main table
ALTER TABLE MAIN 
	DROP COLUMN OWNER1,
	DROP COLUMN OWNER2,
	DROP COLUMN PREVIOUS_NUMBER,
	DROP COLUMN OWNER_MAIL;

--Modifying the data type of column year_built and central_air
ALTER TABLE main ALTER COLUMN year_built TYPE numeric(4);

ALTER TABLE main ALTER COLUMN central_air TYPE numeric(1);

ALTER TABLE main ALTER COLUMN OVERALL_CONDITION TYPE NUMERIC(2);

ALTER TABLE main ALTER COLUMN heat_type TYPE NUMERIC(2);

ALTER TABLE main ALTER COLUMN building_style_code TYPE NUMERIC(2);

ALTER TABLE main ALTER COLUMN CONSTRUCTION_QUALITY_CODE TYPE NUMERIC(16,8);

ALTER TABLE main ALTER COLUMN EXTERIOR_WALL_CODE TYPE NUMERIC(2);

ALTER TABLE main ALTER COLUMN property_class_code TYPE NUMERIC(16);

